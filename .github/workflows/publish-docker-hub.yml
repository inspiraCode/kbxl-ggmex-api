# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish Docker images
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: jjfigueroa/jjfigueroa-repository

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_to_kbx:
   name: kbx-planning
   needs: [push_to_registry]
   runs-on: ubuntu-latest
   steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.7
      env:
        CONTAINER_NAME: kbx-planning
        DOCKER_IMAGE: jjfigueroa/jjfigueroa-repository:main
        DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        APP_TARGET_DOMAIN: ${{ secrets.APP_TARGET_DOMAIN }}
        APP_PORT: 3001
        DB_HOST: db
        DB_NAME: kbxl-ggmex-db
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_PORT: 5432
        API_KEY: ${{ secrets.API_KEY }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      with:
        host: ${{ secrets.TARGET_DOMAIN_SSH }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        envs: DOCKER_USER,DOCKER_PASSWORD,CONTAINER_NAME,APP_TARGET_DOMAIN,APP_PORT,DB_HOST,DB_NAME,DB_USER,DB_PASSWORD,DB_PORT,API_KEY,JWT_SECRET,DOCKER_IMAGE
        steps: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD && \
            docker pull $DOCKER_IMAGE && \
            (docker stop $CONTAINER_NAME || true) && \
            (docker rm $CONTAINER_NAME || true) && \
            docker run -d --name $CONTAINER_NAME --network my-net \
              -e VIRTUAL_HOST=$APP_TARGET_DOMAIN -e LETSENCRYPT_HOST=$APP_TARGET_DOMAIN \
              -e VIRTUAL_PORT=$APP_PORT \
              -e DB_HOST=$DB_HOST \
              -e DB_NAME=$DB_NAME \
              -e DB_USER=$DB_USER \
              -e DB_PASSWORD=$DB_PASSWORD \
              -e DB_PORT=$DB_PORT \
              -e API_KEY=$API_KEY \
              -e JWT_SECRET=$JWT_SECRET \
              -e PORT=$APP_PORT \
              -p $APP_PORT:$APP_PORT \
              $DOCKER_IMAGE"
